//------------Blynk Library included for saving the data in database
#include <BlynkSimpleEsp8266.h>
//-------------------------------------------------------------------------------
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <SPI.h>
//---------Libraries for Asynchronous Web Server----------
#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <Hash.h>
#include <ESPAsyncTCP.h>
#include <ESPAsyncWebServer.h>
#include <Adafruit_Sensor.h>
//--------------------Libraries for DS18B20-----------------
#include <DallasTemperature.h>
#include <OneWire.h>
//-----------------------Network Credentials--------------------------------
const char *ssid = "wifiname";
const char *password = "wifipassword";
//------------Static Ip Configaration--------
char auth[] = "fJe1ydYAFv2NVUsa8HWouIrna6Z4kAE7";
BlynkTimer timer;
//IPAddress staticIP(192, 168 , 0 ,221 );
//IPAddress gateway(192, 168 , 0 ,1 );
//IPAddress subnet(255, 255 , 255 , 0 );
//IPAddress dns( 8 , 8 , 8 ,8 );
int i = 0;
//------------------------------------ Create AsyncWebServer object on port 80---------------------------------------------------------
AsyncWebServer server(80);
#define ONE_WIRE_BUS 2   //D2 pin of nodemcu
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET 14
OneWire oneWire(ONE_WIRE_BUS);
float t = 0.0; // temperature variable for soil temperature
//Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
int Sensor_pin = A0;
int moisture = 0;
String moisturevalue; // Variable to be passed in Asynchronous web Server.
float moisture_percentage = 0.00;
const int buzzer = 14;
//--------------------------------------------------------Root HTML CODE--------------------------------------------------------------------------------------------------------
const char index_html[] PROGMEM = R"rawliteral(
<!DOCTYPE HTML><html>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="https://code.highcharts.com/highcharts.js"></script>
  <style>
    body {
       margin: 0 auto;
      min-height:100%;}
    h2 {
      font-family: Arial;
      font-size: 4.0rem;
      text-align: center;
  }
 .grid-container {
  display: grid;
  grid-template-columns: auto auto auto;
  padding: 10px;
}
  h1{
  text-align:center;
}
.container{
    height: 450px;
    width: 650px;
}
#moisturesensor{
    text-align: center;
    font-size: 20px;
    font-size: 40px;
    }
#plantstatus{
  height: 300px;
    margin-top: 5%;
 }
  .grid-item {
  padding: 30px;
  font-size: 30px;
  text-align: center;
}
</style>
</head>
<body>
  <h2 style="color:#213346;">SOIL MOISTURE MONITORING</h2>
   <div id="moisturesensor">
   <span class="sensor_label">Moisture:</span> 
   <span id="SensorValue">%Moisture%</span>
   <span> %</span> 
   </div>
  <!-- -----------------------------------Displaying the Sensor Value ------------------------------------->
 <div class="grid-container">
 <img class="grid-item" id="plantstatus" src="https://cdn.pixabay.com/photo/2013/07/12/19/24/seedling-154735__340.png">
  <div id="chart-SoilSensor" class="container"></div>
  </div>
   <br>
 </body>
 <script>
 Highcharts.setOptions({
    time: {
        timezone: 'Asia/Kolkata'
    }
});
var chartT = new Highcharts.Chart({
  chart:{ renderTo : 'chart-SoilSensor' },
  title: { text: '' },
  series: [{
    showInLegend: false,
    data: []
  }],
  plotOptions: {
    line: { animation: false,
      dataLabels: { enabled: true }
    },
    series: { color: '#059e8a' }
  },
  xAxis: { type: 'datetime',
    dateTimeLabelFormats: { second: '%H:%M:%S' }
  },
  yAxis: {
    title: { text: 'Moisture(%)' }
    
  },
  credits: { enabled: false }
});
setInterval(function ( ) {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
     var x = (new Date()).getTime(),  //X axis for time representation
         y = parseFloat(this.responseText);  //Y axix for Moisture Percentage Representation
         document.getElementById("SensorValue").innerHTML = this.responseText;
               //console.log(this.responseText);
  //-------------------Displaying Image and Gif according to the moisture status-------------------------------------
   if(y<20){
    document.getElementById("plantstatus").src='https://st2.depositphotos.com/1744275/11481/v/950/depositphotos_114816898-stock-illustration-dead-flower-vector-doodle-illustration.jpg';
    
   }
     else if(y>20 && y<40){
      //document.getElementById("plantstatus").src='https://im6.ezgif.com/tmp/ezgif-6-5198d2b26f85.gif';
      document.getElementById("plantstatus").src='https://www.latestgadget.co/wp-content/uploads/2018/11/pqvxlfws_watering-can.gif';
     }
   
    else if(y>40){
      document.getElementById("plantstatus").src='https://cdn.pixabay.com/photo/2013/07/12/19/24/seedling-154735__340.png';
     }
               
      if(chartT.series[0].data.length > 50) {
        chartT.series[0].addPoint([x, y], true, true, true);
      } else {
        chartT.series[0].addPoint([x, y], true, false, true);
      }
    }
  };
   xhttp.open("GET", "/Moisturevalue", true);
  xhttp.send();
}, 3000 ) ;
</script>
 </html>)rawliteral";

//Function to display logo
void Displaylogo()
{
  static const uint8_t image_data_array[] = {
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdd, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x78, 0x6e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xf0, 0x65, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x12, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x5e, 0x79, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfa, 0x1e, 0x79, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfa, 0xec, 0x36, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0x90, 0x09, 0x77, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0x5d, 0x9a, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0x7f, 0xff, 0xdb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0xff, 0xff, 0x63, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1d, 0xff, 0xff, 0xb9, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xeb, 0xfc, 0xff, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9b, 0xfc, 0xff, 0xd8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x37, 0xfc, 0xff, 0xe8, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xb7, 0xf8, 0x73, 0xec, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xf7, 0xf8, 0x07, 0xed, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x37, 0xf0, 0x0f, 0xea, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x37, 0xf8, 0x1f, 0xea, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x37, 0xf8, 0x3f, 0xe8, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xd7, 0xf8, 0x7f, 0xef, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x9f, 0xfc, 0xff, 0xf8, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x1b, 0xfc, 0xff, 0xda, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0xff, 0xff, 0xf9, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3f,
      0xfc, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcd, 0xff, 0xff, 0xb3, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xbf,
      0xfc, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x9e, 0x7f, 0xfe, 0x61, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x7f,
      0xfe, 0x1f, 0xe0, 0x12, 0x30, 0x0e, 0x67, 0x3f, 0xfc, 0xe6, 0x60, 0x00, 0x00, 0x00, 0x3c, 0x7f,
      0xff, 0xdf, 0xee, 0xac, 0xc9, 0xc6, 0x39, 0x9f, 0xf9, 0xde, 0x59, 0xaa, 0x6e, 0xfe, 0x5f, 0xff,
      0xff, 0xdf, 0xfe, 0xad, 0xed, 0xf7, 0x31, 0x80, 0x01, 0x9c, 0xdf, 0xfb, 0xfd, 0xdf, 0xdf, 0xff,
      0xff, 0xef, 0xfe, 0xef, 0xfd, 0xb7, 0x11, 0x80, 0x00, 0x8c, 0x5f, 0xf7, 0xfd, 0xdb, 0xdf, 0xff,
      0xff, 0xe3, 0xfe, 0xff, 0xdd, 0xb7, 0x8f, 0x01, 0x9c, 0x79, 0x7e, 0xf7, 0xed, 0x9b, 0xcf, 0xff,
      0xff, 0xf9, 0xfe, 0xbf, 0xff, 0xb7, 0xc6, 0x7c, 0x7f, 0x33, 0x6f, 0xf7, 0xcf, 0xdb, 0xdf, 0xff,
      0xff, 0xfd, 0xee, 0xb2, 0x30, 0x27, 0xe0, 0xff, 0xff, 0x87, 0xa1, 0x84, 0x8e, 0xc2, 0x3f, 0xff,
      0xff, 0xfc, 0x60, 0x04, 0x00, 0x4f, 0xf9, 0xff, 0xff, 0xcf, 0x80, 0x42, 0x30, 0x00, 0x3f, 0xff,
      0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xe3, 0xc6, 0xa3, 0xe7, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff,
      0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xe4, 0xc2, 0x03, 0x93, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x0f, 0xca, 0x87, 0xf8, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdb, 0xdc, 0xe3, 0xdd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x07, 0xe0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xe0, 0x07, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

  };
  //Clear the Buffer
  display.clearDisplay();
  //Draw bitmap on the screen
  display.drawBitmap(0, 0, image_data_array, 127, 64, 1);
  display.display();
  delay(3000);
}

// Soil Moisture less than 30 %
void Displaypot1()
{
  static const uint8_t image_data_array[] = {
      // 'pot3, 60x60px
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x20, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0x4e, 0x7f, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x70, 0x01, 0xbf, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x81, 0xfc, 0x9f, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8c, 0x1f, 0xfe, 0x5f, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x30, 0xff, 0xfe, 0x4f, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x47, 0xff, 0xff, 0x4f, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x8f, 0xff, 0x40, 0x00, 0x0f, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x3f, 0x80, 0x00, 0x40, 0x00, 0x07, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0x7c, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x7f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfa, 0x60, 0x40, 0x10, 0x00, 0x00, 0x00, 0x3f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf2, 0xc7, 0xe0, 0x00, 0x00, 0x00, 0x01, 0x9f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x9b, 0x80, 0x00, 0x20, 0x00, 0x00, 0xcf, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf5, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf5, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xef, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe5, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x01, 0xa7, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x87, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x3f, 0x87, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x1f, 0xff, 0xff, 0x9f, 0xff, 0xff, 0x87, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe9, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe9, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe9, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x27, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xe9, 0x23, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x4f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xfc, 0xc7, 0xff, 0xe9, 0x89, 0xff, 0xff, 0xff, 0xfc, 0x03, 0x0f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xfc, 0x37, 0xff, 0xe1, 0xc7, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x1f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xff, 0xe1, 0xf0, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x1f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xe1, 0xf0, 0x00, 0xf8, 0x00, 0x00, 0x0c, 0x3f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xe1, 0xf3, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x3f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x7f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xfa, 0x40, 0x0f, 0xff, 0xff, 0xf0, 0x7f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xf1, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf5, 0xf9, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf5, 0xfd, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xfd, 0x3f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xfc, 0xbf, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xfc, 0xbf, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xfc, 0x9f, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xfe, 0xbf, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff,
      0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff,
      0xff, 0xff, 0xc3, 0x87, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff,
      0xff, 0xff, 0x80, 0x00, 0x0f, 0xff, 0xff, 0xc8, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff,
      0xff, 0xff, 0x80, 0x00, 0x00, 0xff, 0xff, 0x92, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff,
      0xff, 0xff, 0x80, 0x00, 0x06, 0x0f, 0xf8, 0x32, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff,
      0xff, 0xff, 0x00, 0x00, 0x01, 0xc0, 0x00, 0xc8, 0xff, 0x9f, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff,
      0xff, 0xff, 0x80, 0x00, 0x01, 0xb0, 0x00, 0x18, 0xff, 0x9f, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff,
      0xff, 0xff, 0x80, 0x00, 0x01, 0xe7, 0xfc, 0xf1, 0xff, 0xdf, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff,
      0xff, 0xfe, 0x00, 0x00, 0x01, 0xcf, 0xff, 0xe1, 0xff, 0xcf, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff,
      0xff, 0xfc, 0x00, 0x00, 0x00, 0x9f, 0xe0, 0x11, 0xff, 0xcf, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff,
      0xff, 0xfc, 0x00, 0x00, 0x00, 0x3e, 0x07, 0xe4, 0xff, 0xef, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff,
      0xff, 0xfc, 0x00, 0x00, 0x00, 0x70, 0x3f, 0x84, 0xff, 0xe7, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff,
      0xff, 0xfe, 0x00, 0x00, 0x03, 0xc3, 0x8d, 0x86, 0xff, 0xe7, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff,
      0xff, 0xff, 0x00, 0x00, 0x07, 0x99, 0xc0, 0x14, 0xff, 0xf3, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff,
      0xff, 0xff, 0x80, 0x00, 0x0f, 0x3c, 0x30, 0x31, 0xff, 0xf8, 0x08, 0x00, 0x00, 0x7f, 0xff, 0xff,
      0xff, 0xff, 0xe0, 0x00, 0x0e, 0x00, 0x01, 0x03, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
      0xff, 0xff, 0x80, 0x00, 0x1d, 0x80, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x03, 0xff, 0xff, 0xff,
      0xff, 0xff, 0x00, 0x00, 0x38, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0x00, 0x00, 0xf0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0x00, 0x01, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
  //Clear the Buffer
  display.clearDisplay();
  //Draw bitmap on the screen
  display.drawBitmap(0, 0, image_data_array, 128, 64, 1);
  display.display();
  delay(1000);
}

// Soil moisture between 30 - 45 %
void Displaypot2()
{
  static const uint8_t image_data_array[] = {
      // 'pot3, 60x60px
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x70, 0x00, 0x07, 0xcf, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x30, 0x00, 0x07, 0xcf, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0x8f, 0xcf, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x7c, 0x0f, 0xcf, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x10, 0x0f, 0xcf, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x18, 0x0f, 0x8f, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x38, 0x07, 0x9f, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x38, 0x07, 0x3f, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x07, 0x7f, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x7e, 0x04, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x18, 0x03, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x10, 0x07, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x10, 0x07, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3c, 0x0f, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7e, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x17, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
      0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
  //Clear the Buffer
  display.clearDisplay();
  //Draw bitmap on the screen
  display.drawBitmap(0, 0, image_data_array, 128, 64, 1);
  display.display();
  delay(1000);
}

// Soil Moisture above 50 %
void Displaypot3()
{
  static const uint8_t image_data_array[] = {
      // 'pot3, 60x60px
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xd1, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xe1, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe1, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe1, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xe1, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x81, 0x10, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x01, 0x20, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x21, 0x40, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x80, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x3d, 0x3c, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf8, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x3f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0x9f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x27, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x13, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x0b, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x07, 0x47, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x13, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  //Clear the Buffer
  display.clearDisplay();
  //Draw bitmap on the screen
  display.drawBitmap(0, 0, image_data_array, 128, 64, 1);
  display.display();
  delay(1000);
}

//Fuction to display moisture on serial moniter
String ReadMoisture(int moisture)
{

  Serial.print(" Analog Value = ");
  Serial.print(analogRead(Sensor_pin));
  moisture_percentage = (100.00 - (moisture / 1023.00) * 100.00);
  Blynk.virtualWrite(V21, moisture_percentage);
  Serial.print(" Moisture Percenage =");
  Serial.print(moisture_percentage);
  Serial.println(" %");
  return String(moisture_percentage);
  delay(500);
}

//Fuction to display moisture on led.
void leddisplay(int moisture)
{
  display.setCursor(0, 0);
  display.clearDisplay();
  // Calculatig Percentage
  float moisture_percentage;
  moisture_percentage = (100.00 - moisture / 1023.00 * 100.00);
  //Displaying it on led
  display.setCursor(0, 0);
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.println("    Moisture");
  display.println();
  display.println();
  display.display();
  display.setTextSize(3);
  display.print(" ");
  display.print(moisture_percentage);
  display.println("%");
  display.display();
  delay(5000);
}
/* function made to avoid showing percentage sign at the start.To use it should be passed in http root request.
String processor(const String& var){
  //Serial.println(var);
  if(var == "Moisture"){
    moisturevalue = ReadMoisture(moisture);
    return String(moisturevalue);
  }
 
  
  return String();
}
*/
DallasTemperature sensors(&oneWire); //Passing Onewire reference in Dallastemperature
                                     //-------------------peridocally data is sent in database--------------
void myTimerEvent()
{ // You can send any value at any time.
  // Please don't send more that 10 values per second.
  String moisttempstring;
  moisttempstring = String(moisture_percentage) + "," + String(t);
  // Blynk.virtualWrite(V0,"192.168.0.221");
  Blynk.virtualWrite(V22, moisttempstring);
  //Blynk.virtualWrite(V21,moisture_percentage );
  Serial.println("v22 Saved in Database");
}

//----------------------------Setup starts here---------------
void setup(void)
{
  pinMode(buzzer, OUTPUT);
  Serial.begin(115200);
  //Blynk.begin(auth, ssid, password,IPAddress(192,168,0,10), 8080);
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C))
  { // Address 0x3D for 128x64
    Serial.println(F("SSD1306 allocation failed"));
    for (;;)
      ;
  }
  //--------------------------------Connecting to Wifi--------------------------------------
  //WiFi.config(staticIP,gateway,subnet,dns);
  WiFi.begin(ssid, password);
  Serial.println("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(1000);
    Serial.println(".");
  }
  //Print ESP8266 Local IP Address
  Serial.println(WiFi.localIP());
  //-------------------------Http Requests--------------------------------------------------------
  // Route for root / web page
  server.on("/", HTTP_GET, [](AsyncWebServerRequest *request)
            { request->send_P(200, "text/html", index_html); });
  //--------------Route for sending moisture value------------------
  server.on("/Moisturevalue", HTTP_GET, [](AsyncWebServerRequest *request)
            { request->send_P(200, "text/plain", moisturevalue.c_str()); });

  //--------------------------------Route for sending Soil Temperature value-----------
  server.on("/temperature", HTTP_GET, [](AsyncWebServerRequest *request)
            { request->send_P(200, "text/plain", String(t).c_str()); });
  delay(2000);
  //Clear The Buffer
  display.clearDisplay();
  //Set Curser at 0,0 coordinates
  display.setCursor(0, 0);
  //------------------------Start the Server-----------------------------------------------------------------------
  //Start server
  server.begin();
  sensors.begin();
  //Display The Logo of BVCOE
  //Displaylogo();
  //Display Pot
  //Displaypot();
  // Setup a function to be called every second
  timer.setInterval(300000L, myTimerEvent);
}
void loop()
{
  Blynk.run();
  timer.run();    // Initiates BlynkTimer
  if (i % 3 == 0) //Displaying the logo for 3 seconds
  {
    Displaylogo();
    delay(2000);
    i = 1;
  }
  // Displaying pot image on OLED
  moisture = analogRead(Sensor_pin);
  moisturevalue = ReadMoisture(moisture);
  if (moisturevalue.toInt() < 20)
  {
    Displaypot1();

    digitalWrite(buzzer, HIGH);
  }
  else if (moisturevalue.toInt() >= 20 && moisturevalue.toInt() <= 40)
  {
    Displaypot2();
    digitalWrite(buzzer, HIGH);
    delay(2000);
    digitalWrite(buzzer, LOW);
  }
  else
  {
    Displaypot3();
    digitalWrite(buzzer, LOW);
  }
  //Display Analog and percentage moisture on Led
  leddisplay(moisture);

  sensors.requestTemperatures();
  t = sensors.getTempCByIndex(0);
  //Serial.print("Soil Temperature :");
  //Serial.println(t);
}